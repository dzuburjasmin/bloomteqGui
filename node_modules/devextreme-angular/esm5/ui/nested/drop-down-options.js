/*!
 * devextreme-angular
 * Version: 21.2.15
 * Build date: Tue Dec 12 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf, Output, EventEmitter, ContentChildren, forwardRef, QueryList } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoPopupOptions } from './base/popup-options';
import { DxiToolbarItemComponent } from './toolbar-item-dxi';
var DxoDropDownOptionsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoDropDownOptionsComponent, _super);
    function DxoDropDownOptionsComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        _this._createEventEmitters([
            { emit: 'heightChange' },
            { emit: 'positionChange' },
            { emit: 'visibleChange' },
            { emit: 'widthChange' }
        ]);
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoDropDownOptionsComponent.prototype, "_optionPath", {
        get: function () {
            return 'dropDownOptions';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoDropDownOptionsComponent.prototype, "toolbarItemsChildren", {
        get: function () {
            return this._getOption('toolbarItems');
        },
        set: function (value) {
            this.setChildren('toolbarItems', value);
        },
        enumerable: true,
        configurable: true
    });
    DxoDropDownOptionsComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoDropDownOptionsComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoDropDownOptionsComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxoDropDownOptionsComponent.prototype, "heightChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxoDropDownOptionsComponent.prototype, "positionChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxoDropDownOptionsComponent.prototype, "visibleChange", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], DxoDropDownOptionsComponent.prototype, "widthChange", void 0);
    tslib_1.__decorate([
        ContentChildren(forwardRef(function () { return DxiToolbarItemComponent; })),
        tslib_1.__metadata("design:type", QueryList),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxoDropDownOptionsComponent.prototype, "toolbarItemsChildren", null);
    DxoDropDownOptionsComponent = tslib_1.__decorate([
        Component({
            selector: 'dxo-drop-down-options',
            template: '',
            providers: [NestedOptionHost],
            inputs: [
                'accessKey',
                'animation',
                'closeOnOutsideClick',
                'container',
                'contentTemplate',
                'copyRootClassesToWrapper',
                'deferRendering',
                'disabled',
                'dragAndResizeArea',
                'dragEnabled',
                'dragOutsideBoundary',
                'elementAttr',
                'focusStateEnabled',
                'fullScreen',
                'height',
                'hideOnParentScroll',
                'hint',
                'hoverStateEnabled',
                'maxHeight',
                'maxWidth',
                'minHeight',
                'minWidth',
                'onContentReady',
                'onDisposing',
                'onHidden',
                'onHiding',
                'onInitialized',
                'onOptionChanged',
                'onResize',
                'onResizeEnd',
                'onResizeStart',
                'onShowing',
                'onShown',
                'onTitleRendered',
                'position',
                'resizeEnabled',
                'restorePosition',
                'rtlEnabled',
                'shading',
                'shadingColor',
                'showCloseButton',
                'showTitle',
                'tabIndex',
                'title',
                'titleTemplate',
                'toolbarItems',
                'visible',
                'width',
                'wrapperAttr',
                'hideEvent',
                'showEvent',
                'target'
            ],
            styles: ['']
        }),
        tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoDropDownOptionsComponent);
    return DxoDropDownOptionsComponent;
}(DxoPopupOptions));
export { DxoDropDownOptionsComponent };
var DxoDropDownOptionsModule = /** @class */ (function () {
    function DxoDropDownOptionsModule() {
    }
    DxoDropDownOptionsModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                DxoDropDownOptionsComponent
            ],
            exports: [
                DxoDropDownOptionsComponent
            ],
        })
    ], DxoDropDownOptionsModule);
    return DxoDropDownOptionsModule;
}());
export { DxoDropDownOptionsModule };
//# sourceMappingURL=data:application/json;base64,