{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;;AACA","sourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 21.2.15\r\n * Build date: Tue Dec 12 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges, QueryList } from '@angular/core';\r\nimport DxMap from 'devextreme/ui/map';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\nimport { DxiCenterComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiMarkerComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiRouteComponent } from 'devextreme-angular/ui/nested';\r\n/**\r\n * The Map is an interactive UI component that displays a geographic map with markers and routes.\r\n\r\n */\r\nexport declare class DxMapComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxMap;\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\r\n    accessKey: string | undefined;\r\n    /**\r\n     * Specifies whether the UI component changes its state as a result of user interaction.\r\n    \r\n     */\r\n    activeStateEnabled: boolean;\r\n    /**\r\n     * Keys to authenticate the component within map providers.\r\n    \r\n     */\r\n    apiKey: string | {\r\n        bing?: string;\r\n        google?: string;\r\n        googleStatic?: string;\r\n    };\r\n    /**\r\n     * Specifies whether the UI component automatically adjusts center and zoom property values when adding a new marker or route, or if a new UI component contains markers or routes by default.\r\n    \r\n     */\r\n    autoAdjust: boolean;\r\n    /**\r\n     * An object, a string, or an array specifying which part of the map is displayed at the UI component&apos;s center using coordinates. The UI component can change this value if autoAdjust is enabled.\r\n    \r\n     */\r\n    center: string | Array<number | {\r\n        lat?: number;\r\n        lng?: number;\r\n    }>;\r\n    /**\r\n     * Specifies whether or not map UI component controls are available.\r\n    \r\n     */\r\n    controls: boolean;\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Specifies whether the UI component can be focused using keyboard navigation.\r\n    \r\n     */\r\n    focusStateEnabled: boolean;\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    height: number | Function | string;\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the UI component.\r\n    \r\n     */\r\n    hint: string | undefined;\r\n    /**\r\n     * Specifies whether the UI component changes its state when a user pauses on it.\r\n    \r\n     */\r\n    hoverStateEnabled: boolean;\r\n    /**\r\n     * A URL pointing to the custom icon to be used for map markers.\r\n    \r\n     */\r\n    markerIconSrc: string;\r\n    /**\r\n     * An array of markers displayed on a map.\r\n    \r\n     */\r\n    markers: Array<any | {\r\n        iconSrc?: string;\r\n        location?: string | Array<number | {\r\n            lat?: number;\r\n            lng?: number;\r\n        }>;\r\n        onClick?: Function;\r\n        tooltip?: string | {\r\n            isShown?: boolean;\r\n            text?: string;\r\n        };\r\n    }>;\r\n    /**\r\n     * The name of the current map data provider.\r\n    \r\n     */\r\n    provider: string;\r\n    /**\r\n     * An array of routes shown on the map.\r\n    \r\n     */\r\n    routes: Array<any | {\r\n        color?: string;\r\n        locations?: Array<any | {\r\n            lat?: number;\r\n            lng?: number;\r\n        }>;\r\n        mode?: string;\r\n        opacity?: number;\r\n        weight?: number;\r\n    }>;\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n    \r\n     */\r\n    tabIndex: number;\r\n    /**\r\n     * The type of a map to display.\r\n    \r\n     */\r\n    type: string;\r\n    /**\r\n     * Specifies whether the UI component is visible.\r\n    \r\n     */\r\n    visible: boolean;\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    width: number | Function | string;\r\n    /**\r\n     * The map&apos;s zoom level. The UI component can change this value if autoAdjust is enabled.\r\n    \r\n     */\r\n    zoom: number;\r\n    /**\r\n    \r\n     * A function that is executed when any location on the map is clicked or tapped.\r\n    \r\n    \r\n     */\r\n    onClick: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed before the UI component is disposed of.\r\n    \r\n    \r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function used in JavaScript frameworks to save the UI component instance.\r\n    \r\n    \r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed when a marker is created on the map.\r\n    \r\n    \r\n     */\r\n    onMarkerAdded: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed when a marker is removed from the map.\r\n    \r\n    \r\n     */\r\n    onMarkerRemoved: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed after a UI component property is changed.\r\n    \r\n    \r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed when the map is ready.\r\n    \r\n    \r\n     */\r\n    onReady: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed when a route is created on the map.\r\n    \r\n    \r\n     */\r\n    onRouteAdded: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed when a route is removed from the map.\r\n    \r\n    \r\n     */\r\n    onRouteRemoved: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    accessKeyChange: EventEmitter<string | undefined>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    activeStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    apiKeyChange: EventEmitter<string | {\r\n        bing?: string;\r\n        google?: string;\r\n        googleStatic?: string;\r\n    }>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    autoAdjustChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    centerChange: EventEmitter<string | Array<number | {\r\n        lat?: number;\r\n        lng?: number;\r\n    }>>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    controlsChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    focusStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hintChange: EventEmitter<string | undefined>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hoverStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    markerIconSrcChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    markersChange: EventEmitter<Array<any | {\r\n        iconSrc?: string;\r\n        location?: string | Array<number | {\r\n            lat?: number;\r\n            lng?: number;\r\n        }>;\r\n        onClick?: Function;\r\n        tooltip?: string | {\r\n            isShown?: boolean;\r\n            text?: string;\r\n        };\r\n    }>>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    providerChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    routesChange: EventEmitter<Array<any | {\r\n        color?: string;\r\n        locations?: Array<any | {\r\n            lat?: number;\r\n            lng?: number;\r\n        }>;\r\n        mode?: string;\r\n        opacity?: number;\r\n        weight?: number;\r\n    }>>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    tabIndexChange: EventEmitter<number>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    typeChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    visibleChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    zoomChange: EventEmitter<number>;\r\n    centerChildren: QueryList<DxiCenterComponent>;\r\n    markersChildren: QueryList<DxiMarkerComponent>;\r\n    routesChildren: QueryList<DxiRouteComponent>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxMap;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxMapModule {\r\n}\r\n"]}