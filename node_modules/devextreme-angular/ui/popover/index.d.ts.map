{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 21.2.15\r\n * Build date: Tue Dec 12 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges, QueryList } from '@angular/core';\r\nimport { AnimationConfig } from 'devextreme/animation/fx';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport { UserDefinedElement } from 'devextreme/core/element';\r\nimport DxPopover from 'devextreme/ui/popover';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\nimport { DxiToolbarItemComponent } from 'devextreme-angular/ui/nested';\r\n/**\r\n * The Popover is a UI component that shows notifications within a box with an arrow pointing to a specified UI element.\r\n\r\n */\r\nexport declare class DxPopoverComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxPopover;\r\n    /**\r\n     * Configures UI component visibility animations. This object contains two fields: show and hide.\r\n    \r\n     */\r\n    animation: {\r\n        hide?: AnimationConfig;\r\n        show?: AnimationConfig;\r\n    };\r\n    /**\r\n     * Specifies whether to close the UI component if a user clicks outside the popover window or outside the target element.\r\n    \r\n     */\r\n    closeOnOutsideClick: boolean | Function;\r\n    /**\r\n     * Specifies the container in which to render the UI component.\r\n    \r\n     */\r\n    container: string | UserDefinedElement | undefined;\r\n    /**\r\n     * Specifies a custom template for the UI component content.\r\n    \r\n     */\r\n    contentTemplate: any;\r\n    /**\r\n     * Copies your custom CSS classes from the root element to the wrapper element.\r\n    \r\n     * @deprecated Use the wrapperAttr property instead.\r\n    \r\n     */\r\n    copyRootClassesToWrapper: boolean;\r\n    /**\r\n     * Specifies whether to render the UI component&apos;s content when it is displayed. If false, the content is rendered immediately.\r\n    \r\n     */\r\n    deferRendering: boolean;\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     * @deprecated Use the wrapperAttr option instead.\r\n    \r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    height: number | Function | string;\r\n    /**\r\n     * Specifies properties of popover hiding. Ignored if the shading property is set to true.\r\n    \r\n     */\r\n    hideEvent: string | undefined | {\r\n        delay?: number | undefined;\r\n        name?: string | undefined;\r\n    };\r\n    /**\r\n     * Specifies whether to hide the widget when users scroll one of its parent elements.\r\n    \r\n     */\r\n    hideOnParentScroll: boolean;\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the UI component.\r\n    \r\n     */\r\n    hint: string | undefined;\r\n    /**\r\n     * Specifies whether the UI component changes its state when a user pauses on it.\r\n    \r\n     */\r\n    hoverStateEnabled: boolean;\r\n    /**\r\n     * Specifies the maximum height the UI component can reach while resizing.\r\n    \r\n     */\r\n    maxHeight: number | Function | string;\r\n    /**\r\n     * Specifies the maximum width the UI component can reach while resizing.\r\n    \r\n     */\r\n    maxWidth: number | Function | string;\r\n    /**\r\n     * Specifies the minimum height the UI component can reach while resizing.\r\n    \r\n     */\r\n    minHeight: number | Function | string;\r\n    /**\r\n     * Specifies the minimum width the UI component can reach while resizing.\r\n    \r\n     */\r\n    minWidth: number | Function | string;\r\n    /**\r\n     * An object defining UI component positioning properties.\r\n    \r\n     */\r\n    position: DevExpress.PositionConfig | string;\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * Specifies whether to shade the background when the UI component is active.\r\n    \r\n     */\r\n    shading: boolean;\r\n    /**\r\n     * Specifies the shading color. Applies only if shading is enabled.\r\n    \r\n     */\r\n    shadingColor: string;\r\n    /**\r\n     * Specifies whether or not the UI component displays the Close button.\r\n    \r\n     */\r\n    showCloseButton: boolean;\r\n    /**\r\n     * Specifies properties for displaying the UI component.\r\n    \r\n     */\r\n    showEvent: string | undefined | {\r\n        delay?: number | undefined;\r\n        name?: string | undefined;\r\n    };\r\n    /**\r\n     * A Boolean value specifying whether or not to display the title in the overlay window.\r\n    \r\n     */\r\n    showTitle: boolean;\r\n    /**\r\n     * Specifies the element against which to position the widget.\r\n    \r\n     */\r\n    target: string | UserDefinedElement | undefined;\r\n    /**\r\n     * The title in the overlay window.\r\n    \r\n     */\r\n    title: string;\r\n    /**\r\n     * Specifies a custom template for the UI component title. Does not apply if the title is defined.\r\n    \r\n     */\r\n    titleTemplate: any;\r\n    /**\r\n     * Configures toolbar items.\r\n    \r\n     */\r\n    toolbarItems: Array<any | {\r\n        disabled?: boolean;\r\n        html?: string;\r\n        location?: string;\r\n        options?: any;\r\n        template?: any;\r\n        text?: string;\r\n        toolbar?: string;\r\n        visible?: boolean;\r\n        widget?: string;\r\n    }>;\r\n    /**\r\n     * A Boolean value specifying whether or not the UI component is visible.\r\n    \r\n     */\r\n    visible: boolean;\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    width: number | Function | string;\r\n    /**\r\n     * Specifies the global attributes for the UI component&apos;s wrapper element.\r\n    \r\n     */\r\n    wrapperAttr: any;\r\n    /**\r\n    \r\n     * A function that is executed when the UI component is rendered and each time the component is repainted.\r\n    \r\n    \r\n     */\r\n    onContentReady: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed before the UI component is disposed of.\r\n    \r\n    \r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed after the UI component is hidden.\r\n    \r\n    \r\n     */\r\n    onHidden: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed before the UI component is hidden.\r\n    \r\n    \r\n     */\r\n    onHiding: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function used in JavaScript frameworks to save the UI component instance.\r\n    \r\n    \r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed after a UI component property is changed.\r\n    \r\n    \r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed before the UI component is displayed.\r\n    \r\n    \r\n     */\r\n    onShowing: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed after the UI component is displayed.\r\n    \r\n    \r\n     */\r\n    onShown: EventEmitter<any>;\r\n    /**\r\n    \r\n     * A function that is executed when the UI component&apos;s title is rendered.\r\n    \r\n    \r\n     */\r\n    onTitleRendered: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    animationChange: EventEmitter<{\r\n        hide?: AnimationConfig;\r\n        show?: AnimationConfig;\r\n    }>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    closeOnOutsideClickChange: EventEmitter<boolean | Function>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    containerChange: EventEmitter<string | UserDefinedElement | undefined>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    contentTemplateChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    copyRootClassesToWrapperChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    deferRenderingChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hideEventChange: EventEmitter<string | undefined | {\r\n        delay?: number | undefined;\r\n        name?: string | undefined;\r\n    }>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hideOnParentScrollChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hintChange: EventEmitter<string | undefined>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hoverStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    maxHeightChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    maxWidthChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    minHeightChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    minWidthChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    positionChange: EventEmitter<DevExpress.PositionConfig | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    shadingChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    shadingColorChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    showCloseButtonChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    showEventChange: EventEmitter<string | undefined | {\r\n        delay?: number | undefined;\r\n        name?: string | undefined;\r\n    }>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    showTitleChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    targetChange: EventEmitter<string | UserDefinedElement | undefined>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    titleChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    titleTemplateChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    toolbarItemsChange: EventEmitter<Array<any | {\r\n        disabled?: boolean;\r\n        html?: string;\r\n        location?: string;\r\n        options?: any;\r\n        template?: any;\r\n        text?: string;\r\n        toolbar?: string;\r\n        visible?: boolean;\r\n        widget?: string;\r\n    }>>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    visibleChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    wrapperAttrChange: EventEmitter<any>;\r\n    toolbarItemsChildren: QueryList<DxiToolbarItemComponent>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxPopover<any>;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxPopoverModule {\r\n}\r\n"]}