/*!
 * devextreme-angular
 * Version: 21.2.15
 * Build date: Tue Dec 12 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { ElementRef, Renderer2, AfterViewInit, QueryList } from '@angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { NestedOptionHost, DxTemplateDirective, IDxTemplateHost, DxTemplateHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import { DxiItemComponent } from './item-dxi';
import { DxiCommandComponent } from './command-dxi';
import { DxiGroupComponent } from './group-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxiTabComponent extends CollectionNestedOption implements AfterViewInit, IDxTemplateHost {
    private renderer;
    private document;
    private element;
    alignItemLabels: boolean;
    badge: string | undefined;
    colCount: number;
    colCountByScreen: {
        lg?: number | undefined;
        md?: number | undefined;
        sm?: number | undefined;
        xs?: number | undefined;
    };
    disabled: boolean;
    icon: string | undefined;
    items: Array<DevExpress.ui.dxFormSimpleItem | DevExpress.ui.dxFormGroupItem | DevExpress.ui.dxFormTabbedItem | DevExpress.ui.dxFormEmptyItem | DevExpress.ui.dxFormButtonItem>;
    tabTemplate: any | undefined;
    template: any | undefined;
    title: string | undefined;
    commands: Array<DevExpress.ui.dxDiagramCustomCommand | string>;
    groups: Array<any | {
        commands?: Array<DevExpress.ui.dxDiagramCustomCommand | string>;
        title?: string;
    }>;
    protected readonly _optionPath: string;
    itemsChildren: QueryList<DxiItemComponent>;
    commandsChildren: QueryList<DxiCommandComponent>;
    groupsChildren: QueryList<DxiGroupComponent>;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost, renderer: Renderer2, document: any, templateHost: DxTemplateHost, element: ElementRef);
    setTemplate(template: DxTemplateDirective): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DxiTabComponent, [{ host: true; skipSelf: true; }, { host: true; }, null, null, { host: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DxiTabComponent, "dxi-tab", never, { "alignItemLabels": "alignItemLabels"; "badge": "badge"; "colCount": "colCount"; "colCountByScreen": "colCountByScreen"; "disabled": "disabled"; "icon": "icon"; "items": "items"; "tabTemplate": "tabTemplate"; "template": "template"; "title": "title"; "commands": "commands"; "groups": "groups"; }, {}, ["itemsChildren", "commandsChildren", "groupsChildren"], ["*"]>;
}
export declare class DxiTabModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DxiTabModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<DxiTabModule, [typeof DxiTabComponent], never, [typeof DxiTabComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<DxiTabModule>;
}

//# sourceMappingURL=tab-dxi.d.ts.map